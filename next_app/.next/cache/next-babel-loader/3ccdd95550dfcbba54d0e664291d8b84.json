{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/okioka/dev/anime/next_app/components/App.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport axios from 'axios';\nimport css from '../public/styles.scss'; // ページ全体\n\nvar Anime = /*#__PURE__*/function (_React$Component) {\n  _inherits(Anime, _React$Component);\n\n  var _super = _createSuper(Anime);\n\n  function Anime(props) {\n    var _this;\n\n    _classCallCheck(this, Anime);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      anime: [],\n      coursList: [],\n      checked: false\n    };\n    _this.check = _this.check.bind(_assertThisInitialized(_this));\n    _this.animeSearch = _this.animeSearch.bind(_assertThisInitialized(_this));\n    _this.getNowCours = _this.getNowCours.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Anime, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // 現在放送中のデータを最初に表示する\n      this.animeSearch(this.getNowCours());\n      this.setDateList();\n    } // アニメ検索\n    // coursはYYYY/Xの形式で渡される\n\n  }, {\n    key: \"animeSearch\",\n    value: function animeSearch(cours) {\n      var _this2 = this;\n\n      var url = \"http://api.moemoe.tokyo/anime/v1/master/\" + cours + \"?ogp=1\";\n      axios.get(url).then(function (res) {\n        _this2.setState({\n          anime: res.data\n        }); // 聖地のみなら0件チェック\n        // 絞り込みが無い状態は0件がありえないので実装しない\n\n\n        if (_this2.state.checked) {\n          _this2.cityEnptyCheck(res.data);\n        }\n      })[\"catch\"](function (error) {\n        alert(\"データの表示ができません\");\n        console.log(\"データ表示NG\");\n        console.log(error);\n      });\n    } // 聖地のみ絞りこむチェックボックスの状態を変更する\n\n  }, {\n    key: \"check\",\n    value: function check() {\n      if (this.state.checked) {\n        this.setState({\n          checked: false\n        });\n      } else {\n        this.setState({\n          checked: true\n        });\n        this.cityEnptyCheck(this.state.anime);\n      }\n    } // 聖地データが0件かチェック\n\n  }, {\n    key: \"cityEnptyCheck\",\n    value: function cityEnptyCheck(data) {\n      var isCityEmpty = data.every(function (anime) {\n        return anime.city_name === \"\";\n      });\n\n      if (isCityEmpty) {\n        alert(\"データは0件です\");\n      }\n    } // 月から放送クールを求める\n\n  }, {\n    key: \"getCours\",\n    value: function getCours(month) {\n      if (month <= 3) {\n        return 1;\n      } else if (month <= 6) {\n        return 2;\n      } else if (month <= 9) {\n        return 3;\n      } else if (month <= 12) {\n        return 4;\n      }\n    } // 放送クールから季節を求める\n\n  }, {\n    key: \"getSeason\",\n    value: function getSeason(cours) {\n      if (cours === 1) {\n        return '冬';\n      } else if (cours === 2) {\n        return '春';\n      } else if (cours === 3) {\n        return '夏';\n      } else if (cours === 4) {\n        return '秋';\n      }\n    } // 現在放送中の放送クールをYYYY/Xの形式で求める\n\n  }, {\n    key: \"getNowCours\",\n    value: function getNowCours() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var now = year + '/' + this.getCours(month);\n      return now;\n    } // 検索フォームに表示するリストボックス用の値を設定する。\n    // 2014年冬から放送中の放送クールまで\n\n  }, {\n    key: \"setDateList\",\n    value: function setDateList() {\n      var date = new Date();\n      var year = date.getFullYear();\n      var month = date.getMonth() + 1;\n      var cours = this.getCours(month);\n      var coursList = [];\n\n      for (var i = year; i >= 2014; i--) {\n        if (i === year) {\n          for (var j = 1; j <= cours; j++) {\n            var _cours = i + '/' + j;\n\n            var season = i + '年 ' + this.getSeason(j);\n            coursList.push({\n              season: season,\n              cours: _cours\n            });\n          }\n        } else {\n          for (var j = 4; j >= 1; j--) {\n            var _cours2 = i + '/' + j;\n\n            var _season = i + '年 ' + this.getSeason(j);\n\n            coursList.push({\n              season: _season,\n              cours: _cours2\n            });\n          }\n        }\n      }\n\n      this.setState({\n        coursList: coursList\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: css.header,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }\n      }, __jsx(Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }\n      }), __jsx(AnimeForm, {\n        search: function search(cours) {\n          return _this3.animeSearch(cours);\n        },\n        check: this.check,\n        coursList: this.state.coursList,\n        now: this.getNowCours,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }\n      })), __jsx(AnimeList, {\n        anime: this.state.anime,\n        checked: this.state.checked,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return Anime;\n}(React.Component); // ヘッダー部\n\n\nexport { Anime as default };\n\nvar Header = /*#__PURE__*/function (_React$Component2) {\n  _inherits(Header, _React$Component2);\n\n  var _super2 = _createSuper(Header);\n\n  function Header() {\n    _classCallCheck(this, Header);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(Header, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 7\n        }\n      }, \"\\u30A2\\u30CB\\u30E1\\u691C\\u7D22\");\n    }\n  }]);\n\n  return Header;\n}(React.Component); // 検索フォーム\n\n\nvar AnimeForm = /*#__PURE__*/function (_React$Component3) {\n  _inherits(AnimeForm, _React$Component3);\n\n  var _super3 = _createSuper(AnimeForm);\n\n  function AnimeForm(props) {\n    var _this4;\n\n    _classCallCheck(this, AnimeForm);\n\n    _this4 = _super3.call(this, props);\n    _this4.state = {\n      cours: \"\"\n    };\n    _this4.handleChange = _this4.handleChange.bind(_assertThisInitialized(_this4));\n    return _this4;\n  } // リストボックスを変更せずに検索ボタンをクリックすると\n  // 404エラーになってしまう\n  // ここで現在放送中の放送クールを初期値として設定\n\n\n  _createClass(AnimeForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var now = this.props.now();\n      this.setState({\n        cours: now\n      });\n    } // リストボックスクリック時に呼ばれる\n\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e) {\n      this.setState(_defineProperty({}, e.target.name, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      // リストボックス内のデータ\n      var coursNodes = this.props.coursList.map(function (list) {\n        return __jsx(\"option\", {\n          value: list.cours,\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 9\n          }\n        }, list.season);\n      });\n      return __jsx(\"div\", {\n        className: css.form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: css.move,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 9\n        }\n      }, __jsx(\"select\", {\n        name: \"cours\",\n        onChange: this.handleChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }\n      }, coursNodes)), __jsx(\"button\", {\n        className: css.btn,\n        onClick: function onClick() {\n          return _this5.props.search(_this5.state.cours);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 9\n        }\n      }, \"\\u691C\\u7D22\"), __jsx(\"input\", {\n        type: \"checkbox\",\n        id: \"city_chk\",\n        onClick: this.props.check,\n        onLoad: this.props.check,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 9\n        }\n      }), __jsx(\"label\", {\n        htmlFor: \"city_chk\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 9\n        }\n      }, \"\\u8056\\u5730\\u304C\\u3042\\u308B\\u30A2\\u30CB\\u30E1\\u306E\\u307F\"));\n    }\n  }]);\n\n  return AnimeForm;\n}(React.Component);\n\nvar AnimeList = /*#__PURE__*/function (_React$Component4) {\n  _inherits(AnimeList, _React$Component4);\n\n  var _super4 = _createSuper(AnimeList);\n\n  function AnimeList() {\n    _classCallCheck(this, AnimeList);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(AnimeList, [{\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      // アニメデータ\n      var animeNodes = this.props.anime.map(function (anime) {\n        // 聖地のみ出力するか判定する部分  \n        if (_this6.props.checked) {\n          if (\"\".concat(anime.city_name)) {\n            return __jsx(AnimeData, {\n              key: anime.id,\n              title: anime.title,\n              url: anime.public_url,\n              img: anime.ogp.og_image,\n              city: anime.city_name,\n              twitter: anime.twitter_account,\n              __self: _this6,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 13\n              }\n            });\n          }\n        } else {\n          return __jsx(AnimeData, {\n            key: anime.id,\n            title: anime.title,\n            url: anime.public_url,\n            img: anime.ogp.og_image,\n            city: anime.city_name,\n            twitter: anime.twitter_account,\n            __self: _this6,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 11\n            }\n          });\n        }\n      });\n      return __jsx(\"div\", {\n        className: css.tile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 7\n        }\n      }, animeNodes);\n    }\n  }]);\n\n  return AnimeList;\n}(React.Component);\n\nvar AnimeData = /*#__PURE__*/function (_React$Component5) {\n  _inherits(AnimeData, _React$Component5);\n\n  var _super5 = _createSuper(AnimeData);\n\n  function AnimeData() {\n    _classCallCheck(this, AnimeData);\n\n    return _super5.apply(this, arguments);\n  }\n\n  _createClass(AnimeData, [{\n    key: \"render\",\n    value: function render() {\n      // 作品タイトル+聖地名でGoogle検索するURL\n      var searchURL = \"https://www.google.com/search?q=\".concat(this.props.title, \"+\").concat(this.props.city); // 公式TwitterアカウントのURL\n\n      var twitterURL = \"https://twitter.com/\".concat(this.props.twitter); // 聖地が無ければ聖地データは入れない\n\n      var city = \"\".concat(this.props.city).replace(/\\|/g, '');\n\n      if (city === \"\") {\n        city = \"\";\n      } else {\n        city = \"聖地 : \" + city;\n      } // 画像のURLはテスト用\n\n\n      return __jsx(\"div\", {\n        className: css.card,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 7\n        }\n      }, __jsx(\"div\", {\n        className: css.card_imgframe + ' ' + css.box_1x1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: this.props.url,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }\n      }, __jsx(\"img\", {\n        className: css.card_img,\n        src: this.props.img,\n        onError: function onError(e) {\n          return e.target.src = 'http://design-ec.com/d/e_others_50/m_e_others_500.png';\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }\n      }))), __jsx(\"div\", {\n        className: css.card_textbox,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 9\n        }\n      }, __jsx(\"a\", {\n        href: searchURL,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: css.card_titletext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }\n      }, this.props.title), __jsx(\"div\", {\n        className: css.card_overviewtext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 13\n        }\n      }, city)), __jsx(\"a\", {\n        href: twitterURL,\n        target: \"_blank\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }\n      }, __jsx(\"div\", {\n        className: css.card_overviewtext,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, \"twitter : @\", this.props.twitter))));\n    }\n  }]);\n\n  return AnimeData;\n}(React.Component);","map":{"version":3,"sources":["/Users/okioka/dev/anime/next_app/components/App.js"],"names":["React","axios","css","Anime","props","state","anime","coursList","checked","check","bind","animeSearch","getNowCours","setDateList","cours","url","get","then","res","setState","data","cityEnptyCheck","error","alert","console","log","isCityEmpty","every","city_name","month","date","Date","year","getFullYear","getMonth","now","getCours","i","j","season","getSeason","push","header","Component","Header","AnimeForm","handleChange","e","target","name","value","coursNodes","map","list","form","move","btn","search","AnimeList","animeNodes","id","title","public_url","ogp","og_image","twitter_account","tile","AnimeData","searchURL","city","twitterURL","twitter","replace","card","card_imgframe","box_1x1","card_img","img","src","card_textbox","card_titletext","card_overviewtext"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB,C,CAEA;;IACqBC,K;;;;;AACnB,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,SAAS,EAAE,EAFA;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKA,UAAKC,KAAL,GAAa,MAAKA,KAAL,CAAWC,IAAX,+BAAb;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,+BAAnB;AATiB;AAUlB;;;;wCAEmB;AAClB;AACA,WAAKC,WAAL,CAAiB,KAAKC,WAAL,EAAjB;AACA,WAAKC,WAAL;AACD,K,CAED;AACA;;;;gCACYC,K,EAAO;AAAA;;AACjB,UAAMC,GAAG,GAAG,6CAA4CD,KAA5C,GAAoD,QAAhE;AACAb,MAAAA,KAAK,CAACe,GAAN,CAAUD,GAAV,EAAeE,IAAf,CAAoB,UAAAC,GAAG,EAAI;AACzB,QAAA,MAAI,CAACC,QAAL,CAAc;AAACb,UAAAA,KAAK,EAAEY,GAAG,CAACE;AAAZ,SAAd,EADyB,CAGzB;AACA;;;AACA,YAAG,MAAI,CAACf,KAAL,CAAWG,OAAd,EAAuB;AACrB,UAAA,MAAI,CAACa,cAAL,CAAoBH,GAAG,CAACE,IAAxB;AACD;AACF,OARD,WAQS,UAAAE,KAAK,EAAI;AAChBC,QAAAA,KAAK,CAAC,cAAD,CAAL;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAD,QAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACD,OAZD;AAaD,K,CAED;;;;4BACQ;AACN,UAAG,KAAKjB,KAAL,CAAWG,OAAd,EAAuB;AACrB,aAAKW,QAAL,CAAc;AAACX,UAAAA,OAAO,EAAE;AAAV,SAAd;AACD,OAFD,MAEO;AACL,aAAKW,QAAL,CAAc;AAACX,UAAAA,OAAO,EAAE;AAAV,SAAd;AACA,aAAKa,cAAL,CAAoB,KAAKhB,KAAL,CAAWC,KAA/B;AACD;AACF,K,CAED;;;;mCACec,I,EAAM;AACnB,UAAMM,WAAW,GAAGN,IAAI,CAACO,KAAL,CAAW,UAACrB,KAAD,EAAW;AACxC,eACEA,KAAK,CAACsB,SAAN,KAAoB,EADtB;AAGD,OAJmB,CAApB;;AAKA,UAAGF,WAAH,EAAgB;AACdH,QAAAA,KAAK,CAAC,UAAD,CAAL;AACD;AACF,K,CAED;;;;6BACSM,K,EAAO;AACd,UAAGA,KAAK,IAAI,CAAZ,EAAe;AACb,eAAO,CAAP;AACD,OAFD,MAEO,IAAGA,KAAK,IAAI,CAAZ,EAAe;AACpB,eAAO,CAAP;AACD,OAFM,MAEA,IAAGA,KAAK,IAAI,CAAZ,EAAe;AACpB,eAAO,CAAP;AACD,OAFM,MAEA,IAAGA,KAAK,IAAI,EAAZ,EAAgB;AACrB,eAAO,CAAP;AACD;AACF,K,CAED;;;;8BACUf,K,EAAO;AACf,UAAGA,KAAK,KAAK,CAAb,EAAe;AACb,eAAO,GAAP;AACD,OAFD,MAEO,IAAGA,KAAK,KAAK,CAAb,EAAgB;AACrB,eAAO,GAAP;AACD,OAFM,MAEA,IAAGA,KAAK,KAAK,CAAb,EAAgB;AACrB,eAAO,GAAP;AACD,OAFM,MAEA,IAAGA,KAAK,KAAK,CAAb,EAAgB;AACrB,eAAO,GAAP;AACD;AACF,K,CAED;;;;kCACc;AACZ,UAAMgB,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;AACA,UAAMJ,KAAK,GAAGC,IAAI,CAACI,QAAL,KAAkB,CAAhC;AACA,UAAMC,GAAG,GAAGH,IAAI,GAAG,GAAP,GAAa,KAAKI,QAAL,CAAcP,KAAd,CAAzB;AACA,aAAOM,GAAP;AACD,K,CAED;AACA;;;;kCACc;AACZ,UAAML,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,UAAMC,IAAI,GAAGF,IAAI,CAACG,WAAL,EAAb;AACA,UAAMJ,KAAK,GAAGC,IAAI,CAACI,QAAL,KAAkB,CAAhC;AACA,UAAMpB,KAAK,GAAG,KAAKsB,QAAL,CAAcP,KAAd,CAAd;AACA,UAAItB,SAAS,GAAG,EAAhB;;AAEA,WAAI,IAAI8B,CAAC,GAAGL,IAAZ,EAAkBK,CAAC,IAAI,IAAvB,EAA6BA,CAAC,EAA9B,EAAkC;AAChC,YAAGA,CAAC,KAAKL,IAAT,EAAe;AACb,eAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAIxB,KAApB,EAA2BwB,CAAC,EAA5B,EAAgC;AAC9B,gBAAMxB,MAAK,GAAGuB,CAAC,GAAG,GAAJ,GAAUC,CAAxB;;AACA,gBAAMC,MAAM,GAAGF,CAAC,GAAG,IAAJ,GAAW,KAAKG,SAAL,CAAeF,CAAf,CAA1B;AACA/B,YAAAA,SAAS,CAACkC,IAAV,CAAe;AAACF,cAAAA,MAAM,EAAEA,MAAT;AAAiBzB,cAAAA,KAAK,EAAEA;AAAxB,aAAf;AACD;AACF,SAND,MAMO;AACL,eAAI,IAAIwB,CAAC,GAAG,CAAZ,EAAeA,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,gBAAMxB,OAAK,GAAGuB,CAAC,GAAG,GAAJ,GAAUC,CAAxB;;AACA,gBAAMC,OAAM,GAAGF,CAAC,GAAG,IAAJ,GAAW,KAAKG,SAAL,CAAeF,CAAf,CAA1B;;AACA/B,YAAAA,SAAS,CAACkC,IAAV,CAAe;AAACF,cAAAA,MAAM,EAAEA,OAAT;AAAiBzB,cAAAA,KAAK,EAAEA;AAAxB,aAAf;AACD;AACF;AACF;;AACD,WAAKK,QAAL,CAAc;AAACZ,QAAAA,SAAS,EAAEA;AAAZ,OAAd;AACD;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEL,GAAG,CAACwC,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,SAAD;AAAW,QAAA,MAAM,EAAE,gBAAC5B,KAAD;AAAA,iBAAW,MAAI,CAACH,WAAL,CAAiBG,KAAjB,CAAX;AAAA,SAAnB;AAAuD,QAAA,KAAK,EAAE,KAAKL,KAAnE;AAA0E,QAAA,SAAS,EAAE,KAAKJ,KAAL,CAAWE,SAAhG;AAA2G,QAAA,GAAG,EAAE,KAAKK,WAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE,MAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKP,KAAL,CAAWC,KAA7B;AAAoC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWG,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF;AASD;;;;EApIgCR,KAAK,CAAC2C,S,GAuIzC;;;SAvIqBxC,K;;IAwIfyC,M;;;;;;;;;;;;;6BACK;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADF;AAKD;;;;EAPkB5C,KAAK,CAAC2C,S,GAU3B;;;IACME,S;;;;;AACJ,qBAAYzC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;AACA,WAAKC,KAAL,GAAa;AACXS,MAAAA,KAAK,EAAE;AADI,KAAb;AAGA,WAAKgC,YAAL,GAAoB,OAAKA,YAAL,CAAkBpC,IAAlB,gCAApB;AALiB;AAMlB,G,CAED;AACA;AACA;;;;;wCACoB;AAClB,UAAMyB,GAAG,GAAG,KAAK/B,KAAL,CAAW+B,GAAX,EAAZ;AACA,WAAKhB,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEqB;AAAR,OAAd;AACD,K,CAED;;;;iCACaY,C,EAAG;AACd,WAAK5B,QAAL,qBAAgB4B,CAAC,CAACC,MAAF,CAASC,IAAzB,EAAgCF,CAAC,CAACC,MAAF,CAASE,KAAzC;AACD;;;6BAEQ;AAAA;;AACP;AACA,UAAMC,UAAU,GAAG,KAAK/C,KAAL,CAAWG,SAAX,CAAqB6C,GAArB,CAAyB,UAACC,IAAD,EAAU;AACpD,eACE;AAAQ,UAAA,KAAK,EAAEA,IAAI,CAACvC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAA4BuC,IAAI,CAACd,MAAjC,CADF;AAGD,OAJkB,CAAnB;AAKA,aACE;AAAK,QAAA,SAAS,EAAErC,GAAG,CAACoD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEpD,GAAG,CAACqD,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,QAAQ,EAAE,KAAKT,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGK,UADH,CADF,CADF,EAME;AAAQ,QAAA,SAAS,EAAEjD,GAAG,CAACsD,GAAvB;AAA4B,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACpD,KAAL,CAAWqD,MAAX,CAAkB,MAAI,CAACpD,KAAL,CAAWS,KAA7B,CAAN;AAAA,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANF,EAOE;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,EAAE,EAAC,UAA1B;AAAqC,QAAA,OAAO,EAAE,KAAKV,KAAL,CAAWK,KAAzD;AAAgE,QAAA,MAAM,EAAE,KAAKL,KAAL,CAAWK,KAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPF,EAQE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wEARF,CADF;AAYD;;;;EAzCqBT,KAAK,CAAC2C,S;;IA4CxBe,S;;;;;;;;;;;;;6BACK;AAAA;;AACP;AACA,UAAMC,UAAU,GAAG,KAAKvD,KAAL,CAAWE,KAAX,CAAiB8C,GAAjB,CAAqB,UAAC9C,KAAD,EAAW;AACjD;AACA,YAAG,MAAI,CAACF,KAAL,CAAWI,OAAd,EAAuB;AACrB,wBAAMF,KAAK,CAACsB,SAAZ,GAAyB;AACvB,mBACE,MAAC,SAAD;AAAW,cAAA,GAAG,EAAEtB,KAAK,CAACsD,EAAtB;AAA0B,cAAA,KAAK,EAAEtD,KAAK,CAACuD,KAAvC;AAA8C,cAAA,GAAG,EAAEvD,KAAK,CAACwD,UAAzD;AAAqE,cAAA,GAAG,EAAExD,KAAK,CAACyD,GAAN,CAAUC,QAApF;AAA8F,cAAA,IAAI,EAAE1D,KAAK,CAACsB,SAA1G;AAAqH,cAAA,OAAO,EAAEtB,KAAK,CAAC2D,eAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;AACF,SAND,MAMO;AACL,iBACE,MAAC,SAAD;AAAW,YAAA,GAAG,EAAE3D,KAAK,CAACsD,EAAtB;AAA0B,YAAA,KAAK,EAAEtD,KAAK,CAACuD,KAAvC;AAA8C,YAAA,GAAG,EAAEvD,KAAK,CAACwD,UAAzD;AAAqE,YAAA,GAAG,EAAExD,KAAK,CAACyD,GAAN,CAAUC,QAApF;AAA8F,YAAA,IAAI,EAAE1D,KAAK,CAACsB,SAA1G;AAAqH,YAAA,OAAO,EAAEtB,KAAK,CAAC2D,eAApI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;AACF,OAbkB,CAAnB;AAeA,aACE;AAAK,QAAA,SAAS,EAAE/D,GAAG,CAACgE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGP,UADH,CADF;AAKD;;;;EAvBqB3D,KAAK,CAAC2C,S;;IA0BxBwB,S;;;;;;;;;;;;;6BACK;AACP;AACA,UAAMC,SAAS,6CAAsC,KAAKhE,KAAL,CAAWyD,KAAjD,cAA0D,KAAKzD,KAAL,CAAWiE,IAArE,CAAf,CAFO,CAGP;;AACA,UAAMC,UAAU,iCAA0B,KAAKlE,KAAL,CAAWmE,OAArC,CAAhB,CAJO,CAMP;;AACA,UAAMF,IAAI,GAAQ,UAAG,KAAKjE,KAAL,CAAWiE,IAAd,EAAqBG,OAArB,CAA6B,KAA7B,EAAoC,EAApC,CAAlB;;AACA,UAAGH,IAAI,KAAK,EAAZ,EAAgB;AACdA,QAAAA,IAAI,GAAG,EAAP;AACD,OAFD,MAEO;AACLA,QAAAA,IAAI,GAAG,UAAUA,IAAjB;AACD,OAZM,CAcP;;;AACA,aACE;AAAK,QAAA,SAAS,EAAEnE,GAAG,CAACuE,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEvE,GAAG,CAACwE,aAAJ,GAAoB,GAApB,GAA0BxE,GAAG,CAACyE,OAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAE,KAAKvE,KAAL,CAAWW,GAApB;AAAyB,QAAA,MAAM,EAAC,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEb,GAAG,CAAC0E,QAApB;AAA8B,QAAA,GAAG,EAAE,KAAKxE,KAAL,CAAWyE,GAA9C;AAAmD,QAAA,OAAO,EAAE,iBAAC9B,CAAD;AAAA,iBAAOA,CAAC,CAACC,MAAF,CAAS8B,GAAT,GAAe,uDAAtB;AAAA,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADF,CADF,EAME;AAAK,QAAA,SAAS,EAAE5E,GAAG,CAAC6E,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAG,QAAA,IAAI,EAAEX,SAAT;AAAoB,QAAA,MAAM,EAAC,QAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAElE,GAAG,CAAC8E,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAK5E,KAAL,CAAWyD,KADd,CADF,EAIE;AAAK,QAAA,SAAS,EAAE3D,GAAG,CAAC+E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGZ,IADH,CAJF,CADF,EASE;AAAG,QAAA,IAAI,EAAEC,UAAT;AAAqB,QAAA,MAAM,EAAC,QAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAEpE,GAAG,CAAC+E,iBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACc,KAAK7E,KAAL,CAAWmE,OADzB,CADF,CATF,CANF,CADF;AAwBD;;;;EAxCqBvE,KAAK,CAAC2C,S","sourcesContent":["import React from 'react'\nimport axios from 'axios'\nimport css from '../public/styles.scss'\n\n// ページ全体\nexport default class Anime extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      anime: [],\n      coursList: [],\n      checked: false\n    }\n    this.check = this.check.bind(this)\n    this.animeSearch = this.animeSearch.bind(this)\n    this.getNowCours = this.getNowCours.bind(this)\n  }\n\n  componentDidMount() {\n    // 現在放送中のデータを最初に表示する\n    this.animeSearch(this.getNowCours())\n    this.setDateList()\n  }\n\n  // アニメ検索\n  // coursはYYYY/Xの形式で渡される\n  animeSearch(cours) {\n    const url = \"http://api.moemoe.tokyo/anime/v1/master/\"+ cours + \"?ogp=1\"\n    axios.get(url).then(res => { \n      this.setState({anime: res.data})\n\n      // 聖地のみなら0件チェック\n      // 絞り込みが無い状態は0件がありえないので実装しない\n      if(this.state.checked) {\n        this.cityEnptyCheck(res.data)\n      }\n    }).catch(error => {\n      alert(\"データの表示ができません\")\n      console.log(\"データ表示NG\")\n      console.log(error)\n    }) \n  }\n\n  // 聖地のみ絞りこむチェックボックスの状態を変更する\n  check() {\n    if(this.state.checked) {\n      this.setState({checked: false})\n    } else {\n      this.setState({checked: true})\n      this.cityEnptyCheck(this.state.anime)\n    }\n  }\n\n  // 聖地データが0件かチェック\n  cityEnptyCheck(data) {\n    const isCityEmpty = data.every((anime) => {\n      return(\n        anime.city_name === \"\"\n      )\n    })\n    if(isCityEmpty) {\n      alert(\"データは0件です\")\n    }\n  }\n\n  // 月から放送クールを求める\n  getCours(month) {\n    if(month <= 3) {\n      return 1\n    } else if(month <= 6) {\n      return 2\n    } else if(month <= 9) {\n      return 3\n    } else if(month <= 12) {\n      return 4\n    }\n  }\n\n  // 放送クールから季節を求める\n  getSeason(cours) {\n    if(cours === 1){\n      return '冬'\n    } else if(cours === 2) {\n      return '春'\n    } else if(cours === 3) {\n      return '夏'\n    } else if(cours === 4) {\n      return '秋'\n    }\n  }\n\n  // 現在放送中の放送クールをYYYY/Xの形式で求める\n  getNowCours() {\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1\n    const now = year + '/' + this.getCours(month) \n    return now\n  }\n\n  // 検索フォームに表示するリストボックス用の値を設定する。\n  // 2014年冬から放送中の放送クールまで\n  setDateList() {\n    const date = new Date()\n    const year = date.getFullYear()\n    const month = date.getMonth() + 1\n    const cours = this.getCours(month)\n    let coursList = []\n\n    for(var i = year; i >= 2014; i--) {\n      if(i === year) {\n        for(var j = 1; j <= cours; j++) {\n          const cours = i + '/' + j\n          const season = i + '年 ' + this.getSeason(j)\n          coursList.push({season: season, cours: cours})\n        } \n      } else {\n        for(var j = 4; j >= 1; j--) {\n          const cours = i + '/' + j\n          const season = i + '年 ' + this.getSeason(j)\n          coursList.push({season: season, cours: cours})\n        } \n      }\n    }\n    this.setState({coursList: coursList})\n  }\n\n  render() {\n    return (\n      <div>\n        <div className={css.header}>\n          <Header />\n          <AnimeForm search={(cours) => this.animeSearch(cours)} check={this.check} coursList={this.state.coursList} now={this.getNowCours}/>\n        </div>\n        <AnimeList anime={this.state.anime} checked={this.state.checked} />\n      </div>\n    )\n  }\n}\n\n// ヘッダー部\nclass Header extends React.Component {\n  render() {\n    return (\n      <h1>\n        アニメ検索\n      </h1>\n    );\n  }\n}\n\n// 検索フォーム\nclass AnimeForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cours: \"\"\n    }\n    this.handleChange = this.handleChange.bind(this)\n  }\n\n  // リストボックスを変更せずに検索ボタンをクリックすると\n  // 404エラーになってしまう\n  // ここで現在放送中の放送クールを初期値として設定\n  componentDidMount() {\n    const now = this.props.now()\n    this.setState({cours: now})\n  }\n\n  // リストボックスクリック時に呼ばれる\n  handleChange(e) {\n    this.setState({[e.target.name]: e.target.value})\n  }\n\n  render() {\n    // リストボックス内のデータ\n    const coursNodes = this.props.coursList.map((list) => { \n      return(\n        <option value={list.cours}>{list.season}</option>\n      )\n    })\n    return (\n      <div className={css.form}>\n        <div className={css.move}>\n          <select name=\"cours\" onChange={this.handleChange}>\n            {coursNodes}\n          </select>\n        </div>\n        <button className={css.btn} onClick={() => this.props.search(this.state.cours)}>検索</button>\n        <input type=\"checkbox\" id=\"city_chk\" onClick={this.props.check} onLoad={this.props.check}/>\n        <label htmlFor=\"city_chk\">聖地があるアニメのみ</label>\n      </div>\n    )\n  }\n}\n\nclass AnimeList extends React.Component {\n  render() {\n    // アニメデータ\n    const animeNodes = this.props.anime.map((anime) => { \n      // 聖地のみ出力するか判定する部分  \n      if(this.props.checked) {\n        if(`${anime.city_name}`) { \n          return(\n            <AnimeData key={anime.id} title={anime.title} url={anime.public_url} img={anime.ogp.og_image} city={anime.city_name} twitter={anime.twitter_account}></AnimeData>\n          )\n        }\n      } else {\n        return(\n          <AnimeData key={anime.id} title={anime.title} url={anime.public_url} img={anime.ogp.og_image} city={anime.city_name} twitter={anime.twitter_account}></AnimeData>\n        )\n      }  \n    })\n\n    return (\n      <div className={css.tile}>\n        {animeNodes}\n      </div>\n    )\n  }\n}\n\nclass AnimeData extends React.Component {\n  render() {\n    // 作品タイトル+聖地名でGoogle検索するURL\n    const searchURL = `https://www.google.com/search?q=${this.props.title}+${this.props.city}`\n    // 公式TwitterアカウントのURL\n    const twitterURL = `https://twitter.com/${this.props.twitter}`\n\n    // 聖地が無ければ聖地データは入れない\n    let   city      = `${this.props.city}`.replace(/\\|/g, '')\n    if(city === \"\") {\n      city = \"\"\n    } else {\n      city = \"聖地 : \" + city\n    }\n\n    // 画像のURLはテスト用\n    return (\n      <div className={css.card}>\n        <div className={css.card_imgframe + ' ' + css.box_1x1}>\n          <a href={this.props.url} target=\"_blank\">\n            <img className={css.card_img} src={this.props.img} onError={(e) => e.target.src = 'http://design-ec.com/d/e_others_50/m_e_others_500.png'}/>\n          </a>\n        </div>\n        <div className={css.card_textbox}>\n          <a href={searchURL} target=\"_blank\">\n            <div className={css.card_titletext}>\n              {this.props.title}\n            </div>\n            <div className={css.card_overviewtext}>\n              {city}\n            </div>\n          </a>\n          <a href={twitterURL} target=\"_blank\">\n            <div className={css.card_overviewtext}>\n              twitter : @{this.props.twitter}\n            </div>\n          </a>\n        </div>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}